

template<class T> 
class
{

}

template<class T> 
T add(T x, T y){
  T z = x + y;
    return z;
}

void f4<int>(const int*, const double&);

template<typename T>
void f(T s)
{
    std::cout << s << '\n';
}
 
template void f<double>(double); // instantiates f<double>(double)
template void f<>(char); // instantiates f<char>(char), template argument deduced
template void f(int); // instantiates f<int>(int), template argument deduced

template return-type name < argument-list > ( parameter-list ) ;	(1)	
template return-type name ( parameter-list ) ;